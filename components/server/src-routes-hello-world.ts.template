import { createRoute, type RouteHandler, z } from "@hono/zod-openapi";
import { standardErrorResponses } from "@app/api/routes/errors";

const ParamSchema = z.object({
	name: z.string().openapi({
		param: {
			name: "name",
			in: "query",
		},
		example: "Bob",
	}),
});

const ResponseSchema = z
	.object({
		message: z.string().openapi({
			example: "Hello, Bob!",
		}),
	})
	.openapi("HelloWorldResponse");

export const helloWorldRoute = createRoute({
	method: "get",
	path: "/hello-world",
	request: {
		query: ParamSchema,
	},
	responses: {
		200: {
			content: {
				"application/json": {
					schema: ResponseSchema,
				},
			},
			description: "A greeting message",
		},
		...standardErrorResponses({
			hasAuth: false,
		}),
	},
});

export const helloWorldHandler: RouteHandler<typeof helloWorldRoute> = async (
	c,
) => {
	const { name } = c.req.valid("query");
	return c.json({ message: `Hello, ${name}!` }, 200);
};
